return(rnorm(1,mean=prop,sd=sd))
}
# Simulate the percent Obama in 1000 elections
simulatedProportionObama = replicate(10000, simulateElection(proportionObama,sdObama))
hist(simulatedProportionObama)
# Calculate the percent of times Obama wins
percentObamaWin = mean(simulatedProportionObama > 0.5)
percentObamaWin
# Set the estimated percent for Obama
# based on the average of several national polls
proportionObama = 0.504
# Set the standard deviation
# this measures the variability between the different polls.
sdObama = 0.01
# Function to simulate a single election
simulateElection <- function(prop,sd){
return(rnorm(1,mean=prop,sd=sd))
}
# Simulate the percent Obama in 1000 elections
simulatedProportionObama = replicate(10000, simulateElection(proportionObama,sdObama))
hist(simulatedProportionObama)
# Calculate the percent of times Obama wins
percentObamaWin = mean(simulatedProportionObama > 0.5)
percentObamaWin
# Set the estimated percent for Obama
# based on the average of several national polls
proportionObama = 0.504
# Set the standard deviation
# this measures the variability between the different polls.
sdObama = 0.01
# Function to simulate a single election
simulateElection <- function(prop,sd){
return(rnorm(1,mean=prop,sd=sd))
}
# Simulate the percent Obama in 1000 elections
simulatedProportionObama = replicate(10000, simulateElection(proportionObama,sdObama))
hist(simulatedProportionObama)
# Calculate the percent of times Obama wins
percentObamaWin = mean(simulatedProportionObama > 0.5)
percentObamaWin
# Set the estimated percent for Obama
# based on the average of several national polls
proportionObama = 0.504
# Set the standard deviation
# this measures the variability between the different polls.
sdObama = 0.01
# Function to simulate a single election
simulateElection <- function(prop,sd){
return(rnorm(1,mean=prop,sd=sd))
}
# Simulate the percent Obama in 1000 elections
simulatedProportionObama = replicate(10000, simulateElection(proportionObama,sdObama))
hist(simulatedProportionObama)
# Calculate the percent of times Obama wins
percentObamaWin = mean(simulatedProportionObama > 0.5)
percentObamaWin
# Set the estimated percent for Obama
# based on the average of several national polls
proportionObama = 0.504
# Set the standard deviation
# this measures the variability between the different polls.
sdObama = 0.01
# Function to simulate a single election
simulateElection <- function(prop,sd){
return(rnorm(1,mean=prop,sd=sd))
}
# Simulate the percent Obama in 1000 elections
simulatedProportionObama = replicate(10000, simulateElection(proportionObama,sdObama))
hist(simulatedProportionObama)
# Calculate the percent of times Obama wins
percentObamaWin = mean(simulatedProportionObama > 0.5)
percentObamaWin
# Set the estimated percent for Obama
# based on the average of several national polls
proportionObama = 0.504
# Set the standard deviation
# this measures the variability between the different polls.
sdObama = 0.01
# Function to simulate a single election
simulateElection <- function(prop,sd){
return(rnorm(1,mean=prop,sd=sd))
}
# Simulate the percent Obama in 1000 elections
simulatedProportionObama = replicate(10000, simulateElection(proportionObama,sdObama))
hist(simulatedProportionObama)
# Calculate the percent of times Obama wins
percentObamaWin = mean(simulatedProportionObama > 0.5)
percentObamaWin
# Set the estimated percent for Obama
# based on the average of several national polls
proportionObama = 0.504
# Set the standard deviation
# this measures the variability between the different polls.
sdObama = 0.01
# Function to simulate a single election
simulateElection <- function(prop,sd){
return(rnorm(1,mean=prop,sd=sd))
}
# Simulate the percent Obama in 1000 elections
simulatedProportionObama = replicate(10000, simulateElection(proportionObama,sdObama))
hist(simulatedProportionObama)
# Calculate the percent of times Obama wins
percentObamaWin = mean(simulatedProportionObama > 0.5)
percentObamaWin
# Set the estimated percent for Obama
# based on the average of several national polls
proportionObama = 0.504
# Set the standard deviation
# this measures the variability between the different polls.
sdObama = 0.01
# Function to simulate a single election
simulateElection <- function(prop,sd){
return(rnorm(1,mean=prop,sd=sd))
}
# Simulate the percent Obama in 1000 elections
simulatedProportionObama = replicate(10000, simulateElection(proportionObama,sdObama))
hist(simulatedProportionObama)
# Calculate the percent of times Obama wins
percentObamaWin = mean(simulatedProportionObama > 0.5)
percentObamaWin
# Set the estimated percent for Obama
# based on the average of several national polls
proportionObama = 0.504
# Set the standard deviation
# this measures the variability between the different polls.
sdObama = 0.01
# Function to simulate a single election
simulateElection <- function(prop,sd){
return(rnorm(1,mean=prop,sd=sd))
}
# Simulate the percent Obama in 1000 elections
simulatedProportionObama = replicate(10000, simulateElection(proportionObama,sdObama))
hist(simulatedProportionObama)
# Calculate the percent of times Obama wins
percentObamaWin = mean(simulatedProportionObama > 0.5)
percentObamaWin
# Set the estimated percent for Obama
# based on the average of several national polls
proportionObama = 0.504
# Set the standard deviation
# this measures the variability between the different polls.
sdObama = 0.01
# Function to simulate a single election
simulateElection <- function(prop,sd){
return(rnorm(1,mean=prop,sd=sd))
}
# Simulate the percent Obama in 1000 elections
simulatedProportionObama = replicate(10000, simulateElection(proportionObama,sdObama))
hist(simulatedProportionObama)
# Calculate the percent of times Obama wins
percentObamaWin = mean(simulatedProportionObama > 0.5)
percentObamaWin
# Set the estimated percent for Obama
# based on the average of several national polls
proportionObama = 0.504
# Set the standard deviation
# this measures the variability between the different polls.
sdObama = 0.01
# Function to simulate a single election
simulateElection <- function(prop,sd){
return(rnorm(1,mean=prop,sd=sd))
}
# Simulate the percent Obama in 1000 elections
simulatedProportionObama = replicate(10000, simulateElection(proportionObama,sdObama))
hist(simulatedProportionObama)
# Calculate the percent of times Obama wins
percentObamaWin = mean(simulatedProportionObama > 0.5)
percentObamaWin
# Set the estimated percent for Obama
# based on the average of several national polls
proportionObama = 0.504
# Set the standard deviation
# this measures the variability between the different polls.
sdObama = 0.01
# Function to simulate a single election
simulateElection <- function(prop,sd){
return(rnorm(1,mean=prop,sd=sd))
}
# Simulate the percent Obama in 1000 elections
simulatedProportionObama = replicate(10000, simulateElection(proportionObama,sdObama))
hist(simulatedProportionObama)
# Calculate the percent of times Obama wins
percentObamaWin = mean(simulatedProportionObama > 0.5)
percentObamaWin
# Set the estimated percent for Obama
# based on the average of several national polls
proportionObama = 0.504
# Set the standard deviation
# this measures the variability between the different polls.
sdObama = 0.01
# Function to simulate a single election
simulateElection <- function(prop,sd){
return(rnorm(1,mean=prop,sd=sd))
}
# Simulate the percent Obama in 1000 elections
simulatedProportionObama = replicate(10000, simulateElection(proportionObama,sdObama))
hist(simulatedProportionObama)
# Calculate the percent of times Obama wins
percentObamaWin = mean(simulatedProportionObama > 0.5)
percentObamaWin
# Set the estimated percent for Obama
# based on the average of several national polls
proportionObama = 0.504
# Set the standard deviation
# this measures the variability between the different polls.
sdObama = 0.01
# Function to simulate a single election
simulateElection <- function(prop,sd){
return(rnorm(1,mean=prop,sd=sd))
}
# Simulate the percent Obama in 1000 elections
simulatedProportionObama = replicate(10000, simulateElection(proportionObama,sdObama))
hist(simulatedProportionObama)
# Calculate the percent of times Obama wins
percentObamaWin = mean(simulatedProportionObama > 0.5)
percentObamaWin
# Set the estimated percent for Obama
# based on the average of several national polls
proportionObama = 0.504
# Set the standard deviation
# this measures the variability between the different polls.
sdObama = 0.01
# Function to simulate a single election
simulateElection <- function(prop,sd){
return(rnorm(1,mean=prop,sd=sd))
}
# Simulate the percent Obama in 1000 elections
simulatedProportionObama = replicate(10000, simulateElection(proportionObama,sdObama))
hist(simulatedProportionObama)
# Calculate the percent of times Obama wins
percentObamaWin = mean(simulatedProportionObama > 0.5)
percentObamaWin
# Set the estimated percent for Obama
# based on the average of several national polls
proportionObama = 0.504
# Set the standard deviation
# this measures the variability between the different polls.
sdObama = 0.01
# Function to simulate a single election
simulateElection <- function(prop,sd){
return(rnorm(1,mean=prop,sd=sd))
}
# Simulate the percent Obama in 1000 elections
simulatedProportionObama = replicate(10000, simulateElection(proportionObama,sdObama))
hist(simulatedProportionObama)
# Calculate the percent of times Obama wins
percentObamaWin = mean(simulatedProportionObama > 0.5)
percentObamaWin
# Set the estimated percent for Obama
# based on the average of several national polls
proportionObama = 0.504
# Set the standard deviation
# this measures the variability between the different polls.
sdObama = 0.01
# Function to simulate a single election
simulateElection <- function(prop,sd){
return(rnorm(1,mean=prop,sd=sd))
}
# Simulate the percent Obama in 1000 elections
simulatedProportionObama = replicate(10000, simulateElection(proportionObama,sdObama))
hist(simulatedProportionObama)
# Calculate the percent of times Obama wins
percentObamaWin = mean(simulatedProportionObama > 0.5)
percentObamaWin
# Set the estimated percent for Obama
# based on the average of several national polls
proportionObama = 0.504
# Set the standard deviation
# this measures the variability between the different polls.
sdObama = 0.01
# Function to simulate a single election
simulateElection <- function(prop,sd){
return(rnorm(1,mean=prop,sd=sd))
}
# Simulate the percent Obama in 1000 elections
simulatedProportionObama = replicate(10000, simulateElection(proportionObama,sdObama))
hist(simulatedProportionObama)
# Calculate the percent of times Obama wins
percentObamaWin = mean(simulatedProportionObama > 0.5)
percentObamaWin
# Set the estimated percent for Obama
# based on the average of several national polls
proportionObama = 0.504
# Set the standard deviation
# this measures the variability between the different polls.
sdObama = 0.01
# Function to simulate a single election
simulateElection <- function(prop,sd){
return(rnorm(1,mean=prop,sd=sd))
}
# Simulate the percent Obama in 1000 elections
simulatedProportionObama = replicate(10000, simulateElection(proportionObama,sdObama))
hist(simulatedProportionObama)
# Calculate the percent of times Obama wins
percentObamaWin = mean(simulatedProportionObama > 0.5)
percentObamaWin
# Set the estimated percent for Obama
# based on the average of several national polls
proportionObama = 0.504
# Set the standard deviation
# this measures the variability between the different polls.
sdObama = 0.01
# Function to simulate a single election
simulateElection <- function(prop,sd){
return(rnorm(1,mean=prop,sd=sd))
}
# Simulate the percent Obama in 1000 elections
simulatedProportionObama = replicate(10000, simulateElection(proportionObama,sdObama))
hist(simulatedProportionObama)
# Calculate the percent of times Obama wins
percentObamaWin = mean(simulatedProportionObama > 0.5)
percentObamaWin
# Set the estimated percent for Obama
# based on the average of several national polls
proportionObama = 0.504
# Set the standard deviation
# this measures the variability between the different polls.
sdObama = 0.01
# Function to simulate a single election
simulateElection <- function(prop,sd){
return(rnorm(1,mean=prop,sd=sd))
}
# Simulate the percent Obama in 1000 elections
simulatedProportionObama = replicate(10000, simulateElection(proportionObama,sdObama))
hist(simulatedProportionObama)
# Calculate the percent of times Obama wins
percentObamaWin = mean(simulatedProportionObama > 0.5)
percentObamaWin
# Set the estimated percent for Obama
# based on the average of several national polls
proportionObama = 0.504
# Set the standard deviation
# this measures the variability between the different polls.
sdObama = 0.01
# Function to simulate a single election
simulateElection <- function(prop,sd){
return(rnorm(1,mean=prop,sd=sd))
}
# Simulate the percent Obama in 1000 elections
simulatedProportionObama = replicate(10000, simulateElection(proportionObama,sdObama))
hist(simulatedProportionObama)
# Calculate the percent of times Obama wins
percentObamaWin = mean(simulatedProportionObama > 0.5)
percentObamaWin
# Set the estimated percent for Obama
# based on the average of several national polls
proportionObama = 0.504
# Set the standard deviation
# this measures the variability between the different polls.
sdObama = 0.01
# Function to simulate a single election
simulateElection <- function(prop,sd){
return(rnorm(1,mean=prop,sd=sd))
}
# Simulate the percent Obama in 1000 elections
simulatedProportionObama = replicate(10000, simulateElection(proportionObama,sdObama))
hist(simulatedProportionObama)
# Calculate the percent of times Obama wins
percentObamaWin = mean(simulatedProportionObama > 0.5)
percentObamaWin
# Set the estimated percent for Obama
# based on the average of several national polls
proportionObama = 0.504
# Set the standard deviation
# this measures the variability between the different polls.
sdObama = 0.01
# Function to simulate a single election
simulateElection <- function(prop,sd){
return(rnorm(1,mean=prop,sd=sd))
}
# Simulate the percent Obama in 1000 elections
simulatedProportionObama = replicate(10000, simulateElection(proportionObama,sdObama))
hist(simulatedProportionObama)
# Calculate the percent of times Obama wins
percentObamaWin = mean(simulatedProportionObama > 0.5)
percentObamaWin
# Set the estimated percent for Obama
# based on the average of several national polls
proportionObama = 0.504
# Set the standard deviation
# this measures the variability between the different polls.
sdObama = 0.01
# Function to simulate a single election
simulateElection <- function(prop,sd){
return(rnorm(1,mean=prop,sd=sd))
}
# Simulate the percent Obama in 1000 elections
simulatedProportionObama = replicate(10000, simulateElection(proportionObama,sdObama))
hist(simulatedProportionObama)
# Calculate the percent of times Obama wins
percentObamaWin = mean(simulatedProportionObama > 0.5)
percentObamaWin
# Set the estimated percent for Obama
# based on the average of several national polls
proportionObama = 0.504
# Set the standard deviation
# this measures the variability between the different polls.
sdObama = 0.01
# Function to simulate a single election
simulateElection <- function(prop,sd){
return(rnorm(1,mean=prop,sd=sd))
}
# Simulate the percent Obama in 1000 elections
simulatedProportionObama = replicate(10000, simulateElection(proportionObama,sdObama))
hist(simulatedProportionObama)
# Calculate the percent of times Obama wins
percentObamaWin = mean(simulatedProportionObama > 0.5)
percentObamaWin
# Set the estimated percent for Obama
# based on the average of several national polls
proportionObama = 0.504
# Set the standard deviation
# this measures the variability between the different polls.
sdObama = 0.01
# Function to simulate a single election
simulateElection <- function(prop,sd){
return(rnorm(1,mean=prop,sd=sd))
}
# Simulate the percent Obama in 1000 elections
simulatedProportionObama = replicate(10000, simulateElection(proportionObama,sdObama))
hist(simulatedProportionObama)
# Calculate the percent of times Obama wins
percentObamaWin = mean(simulatedProportionObama > 0.5)
percentObamaWin
# Set the estimated percent for Obama
# based on the average of several national polls
proportionObama = 0.504
# Set the standard deviation
# this measures the variability between the different polls.
sdObama = 0.01
# Function to simulate a single election
simulateElection <- function(prop,sd){
return(rnorm(1,mean=prop,sd=sd))
}
# Simulate the percent Obama in 1000 elections
simulatedProportionObama = replicate(10000, simulateElection(proportionObama,sdObama))
hist(simulatedProportionObama)
# Calculate the percent of times Obama wins
percentObamaWin = mean(simulatedProportionObama > 0.5)
percentObamaWin
# Set the estimated percent for Obama
# based on the average of several national polls
proportionObama = 0.504
# Set the standard deviation
# this measures the variability between the different polls.
sdObama = 0.01
# Function to simulate a single election
simulateElection <- function(prop,sd){
return(rnorm(1,mean=prop,sd=sd))
}
# Simulate the percent Obama in 1000 elections
simulatedProportionObama = replicate(10000, simulateElection(proportionObama,sdObama))
hist(simulatedProportionObama)
# Calculate the percent of times Obama wins
percentObamaWin = mean(simulatedProportionObama > 0.5)
percentObamaWin
# Set the estimated percent for Obama
# based on the average of several national polls
proportionObama = 0.504
# Set the standard deviation
# this measures the variability between the different polls.
sdObama = 0.01
# Function to simulate a single election
simulateElection <- function(prop,sd){
return(rnorm(1,mean=prop,sd=sd))
}
# Simulate the percent Obama in 1000 elections
simulatedProportionObama = replicate(10000, simulateElection(proportionObama,sdObama))
hist(simulatedProportionObama)
# Calculate the percent of times Obama wins
percentObamaWin = mean(simulatedProportionObama > 0.5)
percentObamaWin
ys <- c(800000,660000)
describe(ys)
summary(ys)
stdev(ys)
sd(ys)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
load("~/Dropbox/Research/Dissertation Project/analysis/slatkin-power/bellemeade-units-analysis.RData")
setwd("~/Dropbox/Research/Dissertation Project/src/Seriation/analysis/R")
